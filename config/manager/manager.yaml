apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: cloud-hypervisor-provider
    app.kubernetes.io/managed-by: kustomize
  name: system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: cloud-hypervisor-provider
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: cloud-hypervisor-provider
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: cloud-hypervisor-provider
    spec:
      hostPID: true
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution.
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/arch
      #             operator: In
      #             values:
      #               - amd64
      #               - arm64
      #               - ppc64le
      #               - s390x
      #           - key: kubernetes.io/os
      #             operator: In
      #             values:
      #               - linux
#      securityContext:
#        # Projects are configured by default to adhere to the "restricted" Pod Security Standards.
#        # This ensures that deployments meet the highest security requirements for Kubernetes.
#        # For more details, see: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
#        runAsNonRoot: true
#        seccompProfile:
#          type: RuntimeDefault
      initContainers:
        - name: prepare-host
          image: cloud-hypervisor-prepare-host:latest
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          command:
            - /prepare-host
          volumeMounts:
            - mountPath: /var/lib/ch-provider
              name: cloud-hypervisor-provider
      containers:
        - command:
            - /machinepoollet
          args:
            - --leader-elect
          image: machinepoollet:latest
          name: manager
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            allowPrivilegeEscalation: false
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 20Mi
          volumeMounts:
            - mountPath: /var/run
              name: var-run
        - command:
            - /cloud-hypervisor-provider
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: cloud-hypervisor-provider:latest
          name: provider
          securityContext:
            privileged: true
#          livenessProbe:
#            httpGet:
#              path: /healthz
#              port: 8181
#            initialDelaySeconds: 15
#            periodSeconds: 20
#          readinessProbe:
#            httpGet:
#              path: /readyz
#              port: 8081
#            initialDelaySeconds: 5
#            periodSeconds: 10
#          resources:
#            limits:
#              cpu: 2
#              memory: 2Gi
#            requests:
#              cpu: 100m
#              memory: 512Mi
          volumeMounts:
            - name: var-run
              mountPath: /var/run
            - name: var-run-chp
              mountPath: /var/run/chp
            - name: cloud-hypervisor-provider
              mountPath: /var/lib/chp
            - name: kvm
              mountPath: /dev/kvm
            - name: vhost
              mountPath: /dev/vhost-net
            - mountPath: /dev/vfio
              name: vfio
      volumes:
        - name: var-run-chp
          hostPath:
            path: /var/run/chp
            type: DirectoryOrCreate
        - name: var-run
          emptyDir: { }
        - name: etc
          hostPath:
            path: /etc
            type: Directory
        - name: host-dpkg
          hostPath:
            path: /var/lib/dpkg
            type: Directory
        - name: cloud-hypervisor-provider
          hostPath:
            path: /var/lib/chp
            type: DirectoryOrCreate
        - name: kvm
          hostPath:
            path: /dev/kvm
            type: CharDevice
        - name: vhost
          hostPath:
            path: /dev/vhost-net
            type: CharDevice
        - hostPath:
            path: /dev/vfio
            type: Directory
          name: vfio
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
